import { TestCase } from '../types';

export const testCasesMapping: { [taskText: string]: TestCase } = {
  "Configure APIC cluster (for multi-APIC deployments)": {
    tcId: "MG-IT-001",
    lead: "EE",
    witness: "PS",
    priority: "High",
    risk: "High", 
    effort: 2,
    status: "T.B.E.",
    rtmId: "RTM-001",
    preConditions: "APIC hardware installed and powered on",
    expectedResults: "APIC cluster forms successfully within 5 minutes",
    evidenceRequired: true,
    dependencies: ["MG-IT-000"]
  },
  "Verify cluster formation and health": {
    tcId: "MG-IT-002",
    lead: "EE",
    witness: "PS",
    priority: "High",
    risk: "Medium",
    effort: 1,
    status: "T.B.E.",
    rtmId: "RTM-002", 
    preConditions: "APIC cluster configured",
    expectedResults: "All APIC nodes show healthy status",
    evidenceRequired: true,
    dependencies: ["MG-IT-001"]
  },
  "Register leaf switches to the fabric": {
    tcId: "MG-IT-003",
    lead: "EE",
    witness: "PS",
    priority: "High",
    risk: "Medium",
    effort: 3,
    status: "T.B.E.",
    rtmId: "RTM-003",
    preConditions: "Leaf switches connected and powered",
    expectedResults: "All leaf switches registered successfully",
    evidenceRequired: true
  },
  "Register spine switches to the fabric": {
    tcId: "MG-IT-004", 
    lead: "EE",
    witness: "PS",
    priority: "High",
    risk: "Medium",
    effort: 2,
    status: "T.B.E.",
    rtmId: "RTM-004",
    preConditions: "Spine switches connected and powered",
    expectedResults: "All spine switches registered successfully", 
    evidenceRequired: true
  },
  "Install NDO application on Nexus Dashboard": {
    tcId: "MG-NDO-001",
    lead: "EE",
    witness: "PS",
    priority: "High",
    risk: "High",
    effort: 4,
    status: "T.B.E.",
    rtmId: "RTM-NDO-001",
    preConditions: "Nexus Dashboard cluster operational",
    expectedResults: "NDO application installed and accessible",
    evidenceRequired: true,
    vendorDependencies: ["Cisco"]
  },
  "Add and register ACI sites to NDO": {
    tcId: "MG-NDO-002",
    lead: "EE", 
    witness: "PS",
    priority: "High",
    risk: "Medium",
    effort: 3,
    status: "T.B.E.",
    rtmId: "RTM-NDO-002",
    preConditions: "NDO operational, ACI fabrics deployed",
    expectedResults: "All 6 ACI sites registered in NDO",
    evidenceRequired: true,
    dependencies: ["MG-NDO-001"]
  },
  "Test inter-site control plane connectivity": {
    tcId: "MG-TEST-001",
    lead: "EE",
    witness: "PS", 
    priority: "High",
    risk: "High",
    effort: 2,
    status: "T.B.E.",
    rtmId: "RTM-TEST-001",
    preConditions: "All sites configured in NDO",
    expectedResults: "Control plane connectivity verified between all sites",
    evidenceRequired: true
  },
  "Test inter-site data plane connectivity": {
    tcId: "MG-TEST-002",
    lead: "EE",
    witness: "PS",
    priority: "High", 
    risk: "High",
    effort: 3,
    status: "T.B.E.",
    rtmId: "RTM-TEST-002",
    preConditions: "Control plane connectivity verified",
    expectedResults: "Data plane connectivity verified between all sites",
    evidenceRequired: true,
    dependencies: ["MG-TEST-001"]
  },
  "Configure external firewall integration": {
    tcId: "MG-EXT-001",
    lead: "EE",
    witness: "SP",
    priority: "High",
    risk: "Medium",
    effort: 4,
    status: "T.B.E.",
    rtmId: "RTM-EXT-001",
    vendorDependencies: ["CheckPoint"],
    preConditions: "Firewall hardware installed",
    expectedResults: "Firewall integrated with ACI fabric",
    evidenceRequired: true
  },
  "Configure load balancer integration": {
    tcId: "MG-EXT-002",
    lead: "EE",
    witness: "SP",
    priority: "Medium",
    risk: "Medium", 
    effort: 3,
    status: "T.B.E.",
    rtmId: "RTM-EXT-002",
    vendorDependencies: ["F5"],
    preConditions: "Load balancer hardware installed",
    expectedResults: "Load balancer integrated with ACI fabric",
    evidenceRequired: true
  }
};
